"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4947],{213:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"reference/data-formats/index","title":"Data Formats","description":"TrainLoop Evals uses standardized data formats for interoperability and vendor independence.","source":"@site/docs/reference/data-formats/index.md","sourceDirName":"reference/data-formats","slug":"/reference/data-formats/","permalink":"/reference/data-formats/","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/docs/reference/data-formats/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Go SDK API","permalink":"/reference/sdk/go/api"},"next":{"title":"Event Data Format","permalink":"/reference/data-formats/events"}}');var i=s(4848),r=s(8453);const a={sidebar_position:1},l="Data Formats",d={},o=[{value:"Overview",id:"overview",level:2},{value:"File Types",id:"file-types",level:2},{value:"Data Flow",id:"data-flow",level:2},{value:"Quick Reference",id:"quick-reference",level:2},{value:"Event Data",id:"event-data",level:3},{value:"Results Data",id:"results-data",level:3},{value:"Working with Data",id:"working-with-data",level:2},{value:"Command Line Tools",id:"command-line-tools",level:3},{value:"Python Processing",id:"python-processing",level:3},{value:"SQL Queries",id:"sql-queries",level:3},{value:"Schema Validation",id:"schema-validation",level:2},{value:"Detailed Documentation",id:"detailed-documentation",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Migration and Compatibility",id:"migration-and-compatibility",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"data-formats",children:"Data Formats"})}),"\n",(0,i.jsx)(n.p,{children:"TrainLoop Evals uses standardized data formats for interoperability and vendor independence."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"All data in TrainLoop Evals is stored as JSON or JSONL (newline-delimited JSON) files. This ensures:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vendor independence"})," - No proprietary databases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Easy integration"})," - Works with any text processing tools"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version control friendly"})," - Text files can be tracked in git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transparent format"})," - Human-readable and debuggable"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"file-types",children:"File Types"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Format"}),(0,i.jsx)(n.th,{children:"Extension"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Location"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Events"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".jsonl"})}),(0,i.jsx)(n.td,{children:"LLM interaction data"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/events/"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Results"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".json"})}),(0,i.jsx)(n.td,{children:"Evaluation results"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/results/"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Benchmarks"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".json"})}),(0,i.jsx)(n.td,{children:"Model comparison data"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data/benchmarks/"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configuration"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:".yaml"})}),(0,i.jsx)(n.td,{children:"TrainLoop configuration"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"trainloop.config.yaml"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Application \u2192 SDK \u2192 Events (JSONL) \u2192 CLI \u2192 Results (JSON) \u2192 Studio UI\n"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SDKs"})," capture LLM interactions and write events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CLI"})," processes events and generates results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Studio UI"})," reads results and events for visualization"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,i.jsx)(n.h3,{id:"event-data",children:"Event Data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T14:30:25.123Z",\n  "input": { "model": "gpt-4o-mini", "messages": [...] },\n  "output": { "content": "Hello!", "usage": {...} },\n  "metadata": { "provider": "openai", "tags": ["greeting"] }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"results-data",children:"Results Data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T14:30:25.123Z",\n  "suites": {\n    "greeting_evaluation": {\n      "metrics": {\n        "has_greeting_word": { "passed": 42, "total": 45, "score": 0.933 }\n      },\n      "overall_score": 0.889\n    }\n  },\n  "summary": { "overall_score": 0.897 }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"working-with-data",children:"Working with Data"}),"\n",(0,i.jsx)(n.h3,{id:"command-line-tools",children:"Command Line Tools"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View recent events\ntail -f data/events/$(date +%Y-%m-%d).jsonl\n\n# Count events\nwc -l data/events/*.jsonl\n\n# Extract specific fields\njq '.metadata.provider' data/events/*.jsonl | sort | uniq -c\n\n# View results summary\njq '.summary.overall_score' data/results/evaluation_summary.json\n"})}),"\n",(0,i.jsx)(n.h3,{id:"python-processing",children:"Python Processing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import json\nfrom pathlib import Path\n\n# Read events\ndef read_events(data_folder):\n    events = []\n    for file in Path(data_folder).glob("events/*.jsonl"):\n        with open(file) as f:\n            for line in f:\n                events.append(json.loads(line))\n    return events\n\n# Read results\ndef read_results(data_folder):\n    results_file = Path(data_folder) / "results" / "evaluation_summary.json"\n    with open(results_file) as f:\n        return json.load(f)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sql-queries",children:"SQL Queries"}),"\n",(0,i.jsx)(n.p,{children:"TrainLoop Studio UI uses DuckDB for SQL queries:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Events by provider\nSELECT \n  metadata.provider,\n  COUNT(*) as event_count\nFROM 'data/events/*.jsonl'\nGROUP BY metadata.provider;\n\n-- Results over time\nSELECT \n  timestamp,\n  summary.overall_score\nFROM 'data/results/evaluation_*.json'\nORDER BY timestamp DESC;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"schema-validation",children:"Schema Validation"}),"\n",(0,i.jsx)(n.p,{children:"All data formats include schema validation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Validate event data\nfrom trainloop_cli.data.schemas import validate_event\n\nevent = {...}\nis_valid, errors = validate_event(event)\nif not is_valid:\n    print(f"Invalid event: {errors}")\n'})}),"\n",(0,i.jsx)(n.h2,{id:"detailed-documentation",children:"Detailed Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/data-formats/events",children:"Event Data Format"})})," - Complete event schema and examples"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/data-formats/results",children:"Results Data Format"})})," - Evaluation results structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/cli/config",children:"Configuration Format"})})," - YAML configuration reference"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Backups"}),": Back up data files regularly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compression"}),": Compress old files to save space"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring"}),": Track data volume and growth"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validation"}),": Validate data integrity periodically"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Archiving"}),": Archive important datasets"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"migration-and-compatibility",children:"Migration and Compatibility"}),"\n",(0,i.jsx)(n.p,{children:"TrainLoop Evals maintains backward compatibility:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version tracking"})," - All files include format version"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Migration tools"})," - Automatic migration between versions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Validation"})," - Schema validation ensures compatibility"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/explanation/concepts/architecture",children:"Architecture"})," - How data flows through the system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/reference/sdk/",children:"SDK Reference"})," - How to collect event data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/reference/cli/",children:"CLI Reference"})," - How to process data"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);