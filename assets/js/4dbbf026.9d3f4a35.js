"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[357],{6706:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"development/release-process","title":"Release Process","description":"This document describes the TrainLoop Evals release process, including version bumping, changelog management, and publication workflows.","source":"@site/docs/development/release-process.md","sourceDirName":"development","slug":"/development/release-process","permalink":"/development/release-process","draft":false,"unlisted":false,"editUrl":"https://github.com/TrainLoop/evals/tree/main/docs/docs/development/release-process.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"docsSidebar","previous":{"title":"SDK Testing Guide","permalink":"/development/sdk-testing"},"next":{"title":"Architecture Guide","permalink":"/development/architecture"}}');var l=s(4848),r=s(8453);const t={sidebar_position:8},a="Release Process",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Release Workflow",id:"release-workflow",level:2},{value:"Step 1: Create Release Notes",id:"step-1-create-release-notes",level:3},{value:"Step 2: Run the Release Script",id:"step-2-run-the-release-script",level:3},{value:"Step 3: GitHub Actions Handles Publishing",id:"step-3-github-actions-handles-publishing",level:3},{value:"Version Bump Script",id:"version-bump-script",level:2},{value:"Release File Format",id:"release-file-format",level:2},{value:"Changelog Output",id:"changelog-output",level:2},{value:"Build and Publishing",id:"build-and-publishing",level:2},{value:"Automated Publishing (Production)",id:"automated-publishing-production",level:3},{value:"Manual Publishing (Development)",id:"manual-publishing-development",level:3},{value:"Version Management",id:"version-management",level:2},{value:"Semantic Versioning",id:"semantic-versioning",level:3},{value:"Monorepo Version Synchronization",id:"monorepo-version-synchronization",level:3},{value:"Testing Releases",id:"testing-releases",level:2},{value:"Pre-release Testing",id:"pre-release-testing",level:3},{value:"Post-release Verification",id:"post-release-verification",level:3},{value:"Rollback Process",id:"rollback-process",level:2},{value:"Infrastructure Updates",id:"infrastructure-updates",level:2},{value:"Release Checklist",id:"release-checklist",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"Build Failures",id:"build-failures",level:3},{value:"Publishing Failures",id:"publishing-failures",level:3},{value:"Version Conflicts",id:"version-conflicts",level:3},{value:"Support",id:"support",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"release-process",children:"Release Process"})}),"\n",(0,l.jsx)(n.p,{children:"This document describes the TrainLoop Evals release process, including version bumping, changelog management, and publication workflows."}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"TrainLoop Evals uses a semi-automated release process that combines manual release note creation with automated version bumping, building, and publishing."}),"\n",(0,l.jsx)(n.h2,{id:"release-workflow",children:"Release Workflow"}),"\n",(0,l.jsx)(n.h3,{id:"step-1-create-release-notes",children:"Step 1: Create Release Notes"}),"\n",(0,l.jsxs)(n.p,{children:["Before bumping the version, create a release notes file in the ",(0,l.jsx)(n.code,{children:"releases/"})," directory. The file ",(0,l.jsx)(n.strong,{children:"must"})," start with a ",(0,l.jsx)(n.code,{children:"Summary:"})," line that briefly describes the release."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# For example, if releasing version 0.5.0, create releases/0.5.0.md\ncat > releases/0.5.0.md << EOF\nSummary: Major SDK refactoring with comprehensive testing infrastructure\n\n**Major SDK Refactoring and Testing Infrastructure**\n\nThe changes in this release include:\n\n### \ud83d\udcc1 SDK Restructuring\n- Renamed SDK from "evals-sdk" to "sdk"\n- Renamed packages from "trainloop_evals" to "trainloop_llm_logging"\n- Improved config functions to handle environment variable fallbacks\n\n### \ud83e\uddea Testing Infrastructure  \n- Added comprehensive test suites with over 3000 lines of tests\n- Implemented pytest configuration for Python SDK\n- Implemented Jest configuration for TypeScript SDK\n\n### \ud83d\udc1b Bug Fixes\n- Fixed UI database initialization to handle empty directories gracefully\n- Fixed concurrency issues in DuckDB\nEOF\n'})}),"\n",(0,l.jsx)(n.h3,{id:"step-2-run-the-release-script",children:"Step 2: Run the Release Script"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Automated (recommended):"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Use the automated release script:\nnpm run release minor "Brief description of the release"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Manual bump (advanced users):"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm run bump minor\n"})}),"\n",(0,l.jsx)(n.h3,{id:"step-3-github-actions-handles-publishing",children:"Step 3: GitHub Actions Handles Publishing"}),"\n",(0,l.jsx)(n.p,{children:"When merged to the main branch, GitHub Actions automatically:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Creates a git tag"}),"\n",(0,l.jsx)(n.li,{children:"Builds all packages (CLI, SDKs, Studio)"}),"\n",(0,l.jsx)(n.li,{children:"Publishes to package repositories (PyPI, NPM)"}),"\n",(0,l.jsx)(n.li,{children:"Updates deployment infrastructure"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"version-bump-script",children:"Version Bump Script"}),"\n",(0,l.jsx)(n.p,{children:"The version bump script performs the following operations:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Updates all package files"})," with the new version:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"package.json"})," files (root and components)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"pyproject.toml"})," files (Python packages)"]}),"\n",(0,l.jsxs)(n.li,{children:["Lock files (",(0,l.jsx)(n.code,{children:"package-lock.json"}),", ",(0,l.jsx)(n.code,{children:"poetry.lock"}),")"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Updates CHANGELOG.md"})," with a link to the release notes"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Creates a git commit"})," with the version changes"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Pushes to the current branch"})," (no tag creation - handled by GitHub Actions)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"release-file-format",children:"Release File Format"}),"\n",(0,l.jsx)(n.p,{children:"Release files must follow this format:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"Summary: Brief description of the release\n\n[Rest of your detailed release notes in markdown format]\n\n### \ud83d\ude80 New Features\n- Feature 1\n- Feature 2\n\n### \ud83d\udc1b Bug Fixes\n- Fix 1\n- Fix 2\n\n### \ud83d\udcda Documentation\n- Documentation improvements\n\n### \ud83d\udd27 Internal\n- Internal changes\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Important Requirements:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The file ",(0,l.jsx)(n.strong,{children:"must"})," start with ",(0,l.jsx)(n.code,{children:"Summary: <message>"})]}),"\n",(0,l.jsx)(n.li,{children:"The summary is used for git commit messages and tags"}),"\n",(0,l.jsx)(n.li,{children:"Release files should be markdown formatted for readability"}),"\n",(0,l.jsx)(n.li,{children:"Use emojis and clear categorization for better readability"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"changelog-output",children:"Changelog Output"}),"\n",(0,l.jsx)(n.p,{children:"The changelog will contain links to the full release notes:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"# Changelog\n\n## 0.5.0 (2025-05-27)\n[Release Notes](releases/0.5.0.md)\n\n## 0.4.0 (2025-05-22)\n\u2022 Public Release\n"})}),"\n",(0,l.jsx)(n.h2,{id:"build-and-publishing",children:"Build and Publishing"}),"\n",(0,l.jsx)(n.h3,{id:"automated-publishing-production",children:"Automated Publishing (Production)"}),"\n",(0,l.jsx)(n.p,{children:"GitHub Actions handles all publishing when code is merged to main:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/release.yml\n- name: Build all packages\n  run: npm run build\n\n- name: Publish CLI to PyPI\n  run: npm run publish:cli\n\n- name: Publish SDKs to PyPI and NPM\n  run: npm run publish:sdk\n\n- name: Publish Studio to NPM\n  run: npm run publish:studio\n"})}),"\n",(0,l.jsx)(n.h3,{id:"manual-publishing-development",children:"Manual Publishing (Development)"}),"\n",(0,l.jsx)(n.p,{children:"For testing releases:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Build all components\nnpm run build\n\n# Publish individual components\nnpm run publish:cli        # CLI to PyPI\nnpm run publish:sdk        # SDKs to PyPI and NPM\nnpm run publish:studio     # Studio to NPM\n\n# Or publish everything\nnpm run publish\n"})}),"\n",(0,l.jsx)(n.h2,{id:"version-management",children:"Version Management"}),"\n",(0,l.jsx)(n.h3,{id:"semantic-versioning",children:"Semantic Versioning"}),"\n",(0,l.jsxs)(n.p,{children:["TrainLoop Evals follows ",(0,l.jsx)(n.a,{href:"https://semver.org/",children:"semantic versioning"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MAJOR"})," version: Breaking changes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"MINOR"})," version: New features, backwards compatible"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"PATCH"})," version: Bug fixes, backwards compatible"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"monorepo-version-synchronization",children:"Monorepo Version Synchronization"}),"\n",(0,l.jsx)(n.p,{children:"All packages in the monorepo share the same version number:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["CLI (",(0,l.jsx)(n.code,{children:"trainloop-cli"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["Python SDK (",(0,l.jsx)(n.code,{children:"trainloop-llm-logging"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["TypeScript SDK (",(0,l.jsx)(n.code,{children:"trainloop-llm-logging"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["Go SDK (",(0,l.jsx)(n.code,{children:"trainloop-llm-logging"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["Studio UI (",(0,l.jsx)(n.code,{children:"trainloop-studio"}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This ensures compatibility across all components."}),"\n",(0,l.jsx)(n.h2,{id:"testing-releases",children:"Testing Releases"}),"\n",(0,l.jsx)(n.h3,{id:"pre-release-testing",children:"Pre-release Testing"}),"\n",(0,l.jsx)(n.p,{children:"Before creating a release:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Run all tests\nnpm test\n\n# Build all packages\nnpm run build\n\n# Test CLI locally\ncd cli && poetry run trainloop --help\n\n# Test Studio locally\ncd ui && npm run dev\n"})}),"\n",(0,l.jsx)(n.h3,{id:"post-release-verification",children:"Post-release Verification"}),"\n",(0,l.jsx)(n.p,{children:"After publishing:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Test CLI installation\npipx install trainloop-cli\ntrainloop --version\n\n# Test SDK installation\npip install trainloop-llm-logging\nnpm install trainloop-llm-logging\n"})}),"\n",(0,l.jsx)(n.h2,{id:"rollback-process",children:"Rollback Process"}),"\n",(0,l.jsx)(n.p,{children:"If a release needs to be rolled back:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Identify the issue"})," and create a hotfix"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Create a patch release"})," with the fix"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Update package repositories"})," to mark the problematic version as deprecated"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Communicate"})," the issue and resolution to users"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"infrastructure-updates",children:"Infrastructure Updates"}),"\n",(0,l.jsx)(n.p,{children:"Release deployments may also update infrastructure:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Update Pulumi infrastructure after release\nnpm run pulumi:bump\n"})}),"\n",(0,l.jsx)(n.p,{children:"This ensures that any infrastructure changes required for the new version are deployed."}),"\n",(0,l.jsx)(n.h2,{id:"release-checklist",children:"Release Checklist"}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create release notes file in ",(0,l.jsx)(n.code,{children:"releases/"})]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Release notes start with ",(0,l.jsx)(n.code,{children:"Summary:"})," line"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run ",(0,l.jsx)(n.code,{children:"npm run release [major|minor|patch]"})]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify all tests pass"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create pull request"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Merge to main branch"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify GitHub Actions deployment succeeds"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test published packages"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Announce release in appropriate channels"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.h3,{id:"build-failures",children:"Build Failures"}),"\n",(0,l.jsx)(n.p,{children:"If the build fails during release:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Fix the issue in a separate commit"}),"\n",(0,l.jsx)(n.li,{children:"Re-run the release process"}),"\n",(0,l.jsx)(n.li,{children:"Ensure all package.json files are updated consistently"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"publishing-failures",children:"Publishing Failures"}),"\n",(0,l.jsx)(n.p,{children:"If publishing fails:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Check API tokens for PyPI and NPM"}),"\n",(0,l.jsx)(n.li,{children:"Verify package names and versions"}),"\n",(0,l.jsx)(n.li,{children:"Check for network connectivity issues"}),"\n",(0,l.jsx)(n.li,{children:"Retry publishing individual components"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"version-conflicts",children:"Version Conflicts"}),"\n",(0,l.jsx)(n.p,{children:"If version conflicts occur:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Ensure all package files have consistent versions"}),"\n",(0,l.jsxs)(n.li,{children:["Run ",(0,l.jsx)(n.code,{children:"npm run bump"})," again to fix inconsistencies"]}),"\n",(0,l.jsx)(n.li,{children:"Check for uncommitted changes that might interfere"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,l.jsx)(n.p,{children:"For questions about the release process:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Check the ",(0,l.jsx)(n.a,{href:"/development/local-development",children:"development documentation"})]}),"\n",(0,l.jsx)(n.li,{children:"Open an issue on GitHub"}),"\n",(0,l.jsx)(n.li,{children:"Contact the maintainers via GitHub discussions"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);