"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[702],{187:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/sdk/go/api","title":"Go SDK API","description":"Complete API reference for the TrainLoop Go SDK.","source":"@site/docs/reference/sdk/go/api.md","sourceDirName":"reference/sdk/go","slug":"/reference/sdk/go/api","permalink":"/reference/sdk/go/api","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/docs/reference/sdk/go/api.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Go","permalink":"/reference/sdk/go"},"next":{"title":"Data Formats","permalink":"/reference/data-formats/"}}');var o=t(4848),r=t(8453);const a={sidebar_position:1},l="Go SDK API",s={},d=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Init(options ...Option)",id:"initoptions-option",level:3},{value:"Shutdown()",id:"shutdown",level:3},{value:"TrainloopTag(tag string, metadata map[string]string) context.Context",id:"trainlooptagtag-string-metadata-mapstringstring-contextcontext",level:3},{value:"Collect(ctx context.Context, data interface)",id:"collectctx-contextcontext-data-interface",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"WithDataFolder(folder string)",id:"withdatafolderfolder-string",level:3},{value:"WithFlushImmediately(enabled bool)",id:"withflushimmediatelyenabled-bool",level:3},{value:"WithTags(tags []string)",id:"withtagstags-string",level:3},{value:"WithBufferSize(size int)",id:"withbuffersizesize-int",level:3},{value:"WithBufferTimeout(timeout time.Duration)",id:"withbuffertimeouttimeout-timeduration",level:3},{value:"Supported Libraries",id:"supported-libraries",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom HTTP Client",id:"custom-http-client",level:3},{value:"Conditional Instrumentation",id:"conditional-instrumentation",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Examples",id:"examples",level:2},{value:"OpenAI Chat Completion",id:"openai-chat-completion",level:3},{value:"HTTP Server with TrainLoop",id:"http-server-with-trainloop",level:3},{value:"Concurrent Requests",id:"concurrent-requests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"See Also",id:"see-also",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"go-sdk-api",children:"Go SDK API"})}),"\n",(0,o.jsx)(e.p,{children:"Complete API reference for the TrainLoop Go SDK."}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"go get github.com/trainloop/evals/sdk/go/trainloop-llm-logging\n"})}),"\n",(0,o.jsx)(e.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "os"\n    \n    "github.com/sashabaranov/go-openai"\n    trainloop "github.com/trainloop/evals/sdk/go/trainloop-llm-logging"\n)\n\nfunc main() {\n    // Initialize TrainLoop\n    trainloop.Init()\n    defer trainloop.Shutdown()\n    \n    // Use with OpenAI\n    client := openai.NewClient(os.Getenv("OPENAI_API_KEY"))\n    \n    resp, err := client.CreateChatCompletion(\n        context.Background(),\n        openai.ChatCompletionRequest{\n            Model: openai.GPT4OMini,\n            Messages: []openai.ChatCompletionMessage{\n                {Role: openai.ChatMessageRoleUser, Content: "Hello"},\n            },\n        },\n    )\n    \n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    fmt.Println(resp.Choices[0].Message.Content)\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,o.jsx)(e.h3,{id:"initoptions-option",children:"Init(options ...Option)"}),"\n",(0,o.jsx)(e.p,{children:"Initialize TrainLoop data collection."}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"options"})," ([]Option): Configuration options"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'// Basic initialization\ntrainloop.Init()\n\n// With options\ntrainloop.Init(\n    trainloop.WithDataFolder("./custom-data"),\n    trainloop.WithFlushImmediately(true),\n    trainloop.WithTags([]string{"production"}),\n)\n'})}),"\n",(0,o.jsx)(e.h3,{id:"shutdown",children:"Shutdown()"}),"\n",(0,o.jsx)(e.p,{children:"Gracefully shutdown TrainLoop and flush buffered events."}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"defer trainloop.Shutdown()\n"})}),"\n",(0,o.jsx)(e.h3,{id:"trainlooptagtag-string-metadata-mapstringstring-contextcontext",children:"TrainloopTag(tag string, metadata map[string]string) context.Context"}),"\n",(0,o.jsx)(e.p,{children:"Create a context with TrainLoop tags for HTTP requests."}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"tag"})," (string): Tag name"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"metadata"})," (map[string]string): Additional metadata"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Returns"}),": Context with TrainLoop headers"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'// Basic tagging\nctx := trainloop.TrainloopTag("greeting", nil)\n\n// With metadata\nctx := trainloop.TrainloopTag("customer-support", map[string]string{\n    "priority": "high",\n    "version": "1.0",\n})\n\n// Use with HTTP client\nreq, _ := http.NewRequestWithContext(ctx, "POST", url, body)\n'})}),"\n",(0,o.jsxs)(e.h3,{id:"collectctx-contextcontext-data-interface",children:["Collect(ctx context.Context, data interface",")"]}),"\n",(0,o.jsx)(e.p,{children:"Manually collect event data."}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Parameters"}),":"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"ctx"})," (context.Context): Request context"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"data"})," (interface","): Event data"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'// Collect custom event\ntrainloop.Collect(ctx, map[string]interface{}{\n    "event_type": "custom",\n    "data": "some data",\n})\n'})}),"\n",(0,o.jsx)(e.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,o.jsx)(e.h3,{id:"withdatafolderfolder-string",children:"WithDataFolder(folder string)"}),"\n",(0,o.jsx)(e.p,{children:"Set custom data folder."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'trainloop.Init(trainloop.WithDataFolder("/custom/path"))\n'})}),"\n",(0,o.jsx)(e.h3,{id:"withflushimmediatelyenabled-bool",children:"WithFlushImmediately(enabled bool)"}),"\n",(0,o.jsx)(e.p,{children:"Enable/disable immediate flushing."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"trainloop.Init(trainloop.WithFlushImmediately(true))\n"})}),"\n",(0,o.jsx)(e.h3,{id:"withtagstags-string",children:"WithTags(tags []string)"}),"\n",(0,o.jsx)(e.p,{children:"Set default tags for all events."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'trainloop.Init(trainloop.WithTags([]string{"production", "v1.0"}))\n'})}),"\n",(0,o.jsx)(e.h3,{id:"withbuffersizesize-int",children:"WithBufferSize(size int)"}),"\n",(0,o.jsx)(e.p,{children:"Set buffer size for batching."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"trainloop.Init(trainloop.WithBufferSize(100))\n"})}),"\n",(0,o.jsx)(e.h3,{id:"withbuffertimeouttimeout-timeduration",children:"WithBufferTimeout(timeout time.Duration)"}),"\n",(0,o.jsx)(e.p,{children:"Set buffer timeout."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'import "time"\n\ntrainloop.Init(trainloop.WithBufferTimeout(30 * time.Second))\n'})}),"\n",(0,o.jsx)(e.h2,{id:"supported-libraries",children:"Supported Libraries"}),"\n",(0,o.jsx)(e.p,{children:"The Go SDK automatically instruments:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"OpenAI"})," (",(0,o.jsx)(e.code,{children:"github.com/sashabaranov/go-openai"}),")"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Standard HTTP client"})," (",(0,o.jsx)(e.code,{children:"net/http"}),")"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Custom HTTP clients"})," (via context)"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'export TRAINLOOP_DATA_FOLDER="./data"\nexport TRAINLOOP_FLUSH_IMMEDIATELY=true\nexport TRAINLOOP_TAGS="production,v1.0"\n'})}),"\n",(0,o.jsx)(e.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,o.jsx)(e.h3,{id:"custom-http-client",children:"Custom HTTP Client"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'import (\n    "net/http"\n    "time"\n    \n    trainloop "github.com/trainloop/evals/sdk/go/trainloop-llm-logging"\n)\n\nfunc main() {\n    trainloop.Init()\n    defer trainloop.Shutdown()\n    \n    // Custom HTTP client\n    client := &http.Client{\n        Timeout: 30 * time.Second,\n        Transport: trainloop.NewRoundTripper(http.DefaultTransport),\n    }\n    \n    // Use tagged context\n    ctx := trainloop.TrainloopTag("custom-http", nil)\n    req, _ := http.NewRequestWithContext(ctx, "GET", "https://api.example.com", nil)\n    \n    resp, err := client.Do(req)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"conditional-instrumentation",children:"Conditional Instrumentation"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'import "os"\n\nfunc main() {\n    // Only instrument in production\n    if os.Getenv("ENVIRONMENT") == "production" {\n        trainloop.Init()\n        defer trainloop.Shutdown()\n    }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'func main() {\n    err := trainloop.Init()\n    if err != nil {\n        log.Printf("TrainLoop initialization failed: %v", err)\n        // Continue without instrumentation\n    } else {\n        defer trainloop.Shutdown()\n    }\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(e.h3,{id:"openai-chat-completion",children:"OpenAI Chat Completion"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "os"\n    \n    "github.com/sashabaranov/go-openai"\n    trainloop "github.com/trainloop/evals/sdk/go/trainloop-llm-logging"\n)\n\nfunc main() {\n    trainloop.Init()\n    defer trainloop.Shutdown()\n    \n    client := openai.NewClient(os.Getenv("OPENAI_API_KEY"))\n    \n    resp, err := client.CreateChatCompletion(\n        context.Background(),\n        openai.ChatCompletionRequest{\n            Model: openai.GPT4OMini,\n            Messages: []openai.ChatCompletionMessage{\n                {Role: openai.ChatMessageRoleSystem, Content: "You are a helpful assistant."},\n                {Role: openai.ChatMessageRoleUser, Content: "What is the capital of France?"},\n            },\n        },\n    )\n    \n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    fmt.Println(resp.Choices[0].Message.Content)\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"http-server-with-trainloop",children:"HTTP Server with TrainLoop"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "encoding/json"\n    "net/http"\n    "os"\n    \n    "github.com/sashabaranov/go-openai"\n    trainloop "github.com/trainloop/evals/sdk/go/trainloop-llm-logging"\n)\n\ntype ChatRequest struct {\n    Messages []openai.ChatCompletionMessage `json:"messages"`\n}\n\nfunc main() {\n    trainloop.Init()\n    defer trainloop.Shutdown()\n    \n    client := openai.NewClient(os.Getenv("OPENAI_API_KEY"))\n    \n    http.HandleFunc("/chat", func(w http.ResponseWriter, r *http.Request) {\n        var req ChatRequest\n        json.NewDecoder(r.Body).Decode(&req)\n        \n        // Tag the request\n        ctx := trainloop.TrainloopTag("chat-api", map[string]string{\n            "endpoint": "/chat",\n            "method": r.Method,\n        })\n        \n        resp, err := client.CreateChatCompletionWithContext(\n            ctx,\n            openai.ChatCompletionRequest{\n                Model: openai.GPT4OMini,\n                Messages: req.Messages,\n            },\n        )\n        \n        if err != nil {\n            http.Error(w, err.Error(), http.StatusInternalServerError)\n            return\n        }\n        \n        json.NewEncoder(w).Encode(resp)\n    })\n    \n    http.ListenAndServe(":8080", nil)\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"concurrent-requests",children:"Concurrent Requests"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "context"\n    "fmt"\n    "sync"\n    "os"\n    \n    "github.com/sashabaranov/go-openai"\n    trainloop "github.com/trainloop/evals/sdk/go/trainloop-llm-logging"\n)\n\nfunc main() {\n    trainloop.Init()\n    defer trainloop.Shutdown()\n    \n    client := openai.NewClient(os.Getenv("OPENAI_API_KEY"))\n    \n    var wg sync.WaitGroup\n    \n    for i := 0; i < 10; i++ {\n        wg.Add(1)\n        go func(id int) {\n            defer wg.Done()\n            \n            ctx := trainloop.TrainloopTag("concurrent", map[string]string{\n                "worker_id": fmt.Sprintf("%d", id),\n            })\n            \n            resp, err := client.CreateChatCompletionWithContext(\n                ctx,\n                openai.ChatCompletionRequest{\n                    Model: openai.GPT4OMini,\n                    Messages: []openai.ChatCompletionMessage{\n                        {Role: openai.ChatMessageRoleUser, Content: fmt.Sprintf("Hello from worker %d", id)},\n                    },\n                },\n            )\n            \n            if err != nil {\n                fmt.Printf("Worker %d error: %v\\n", id, err)\n                return\n            }\n            \n            fmt.Printf("Worker %d: %s\\n", id, resp.Choices[0].Message.Content)\n        }(i)\n    }\n    \n    wg.Wait()\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Module not found"}),": Run ",(0,o.jsx)(e.code,{children:"go get github.com/trainloop/evals/sdk/go/trainloop-llm-logging"})]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"No data collected"}),": Check that ",(0,o.jsx)(e.code,{children:"TRAINLOOP_DATA_FOLDER"})," is set and writable"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"High memory usage"}),": Enable ",(0,o.jsx)(e.code,{children:"WithFlushImmediately(true)"})," for high-volume applications"]}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Missing events"}),": Ensure ",(0,o.jsx)(e.code,{children:"Init()"})," is called before making HTTP requests"]}),"\n",(0,o.jsx)(e.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'import "log"\n\nfunc main() {\n    // Enable debug logging\n    trainloop.Init(trainloop.WithDebug(true))\n    defer trainloop.Shutdown()\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/reference/sdk/",children:"SDK Overview"})," - Multi-language SDK documentation"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/tutorials/getting-started",children:"Getting Started"})," - Complete setup guide"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/reference/sdk/python/api",children:"Python SDK"})," - Python API reference"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/reference/sdk/typescript/api",children:"TypeScript SDK"})," - TypeScript API reference"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var i=t(6540);const o={},r=i.createContext(o);function a(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);