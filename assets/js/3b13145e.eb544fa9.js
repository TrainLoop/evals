"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7373],{3635:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"reference/sdk/typescript/api","title":"TypeScript SDK API","description":"Complete API reference for the TrainLoop TypeScript/JavaScript SDK.","source":"@site/docs/reference/sdk/typescript/api.md","sourceDirName":"reference/sdk/typescript","slug":"/reference/sdk/typescript/api","permalink":"/reference/sdk/typescript/api","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/docs/reference/sdk/typescript/api.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"TypeScript","permalink":"/reference/sdk/typescript"},"next":{"title":"Go","permalink":"/reference/sdk/go"}}');var r=s(4848),a=s(8453);const t={sidebar_position:1},o="TypeScript SDK API",l={},c=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Initialization",id:"initialization",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"trainloopTag(tag, metadata?)",id:"trainlooptagtag-metadata",level:3},{value:"shutdown()",id:"shutdown",level:3},{value:"Supported Libraries",id:"supported-libraries",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Via Environment Variables",id:"via-environment-variables",level:3},{value:"Via Configuration File",id:"via-configuration-file",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Manual Instrumentation",id:"manual-instrumentation",level:3},{value:"Custom Data Folder",id:"custom-data-folder",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Examples",id:"examples",level:2},{value:"OpenAI Chat Completion",id:"openai-chat-completion",level:3},{value:"Anthropic Claude",id:"anthropic-claude",level:3},{value:"Express.js Application",id:"expressjs-application",level:3},{value:"Streaming Responses",id:"streaming-responses",level:3},{value:"TypeScript Support",id:"typescript-support",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"typescript-sdk-api",children:"TypeScript SDK API"})}),"\n",(0,r.jsx)(n.p,{children:"Complete API reference for the TrainLoop TypeScript/JavaScript SDK."}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install trainloop-llm-logging\n"})}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const { OpenAI } = require(\'openai\');\nconst { trainloopTag } = require(\'trainloop-llm-logging\');\n\nconst client = new OpenAI();\n\nconst response = await client.chat.completions.create({\n    model: "gpt-4o-mini",\n    messages: [{"role": "user", "content": "Hello"}]\n}, {\n    headers: { ...trainloopTag("greeting") }\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"initialization",children:"Initialization"}),"\n",(0,r.jsx)(n.p,{children:"The TypeScript SDK uses automatic instrumentation via Node.js require flags:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Automatic instrumentation\nNODE_OPTIONS="--require=trainloop-llm-logging" node app.js\n\n# With environment variables\nTRAINLOOP_DATA_FOLDER=./data NODE_OPTIONS="--require=trainloop-llm-logging" node app.js\n'})}),"\n",(0,r.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(n.h3,{id:"trainlooptagtag-metadata",children:"trainloopTag(tag, metadata?)"}),"\n",(0,r.jsx)(n.p,{children:"Generate headers for tagging LLM calls."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tag"})," (string): Tag name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"metadata"})," (object, optional): Additional metadata"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": Object with headers for HTTP requests"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Basic tagging\nconst headers = trainloopTag("greeting");\n\n// With metadata\nconst headers = trainloopTag("customer-support", { \n    priority: "high", \n    version: "1.0" \n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shutdown",children:"shutdown()"}),"\n",(0,r.jsx)(n.p,{children:"Gracefully shutdown TrainLoop and flush buffered events."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { shutdown } = require('trainloop-llm-logging');\n\n// Flush and shutdown\nawait shutdown();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"supported-libraries",children:"Supported Libraries"}),"\n",(0,r.jsx)(n.p,{children:"The TypeScript SDK automatically instruments:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OpenAI"})," (",(0,r.jsx)(n.code,{children:"openai"})," package)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anthropic"})," (",(0,r.jsx)(n.code,{children:"@anthropic-ai/sdk"})," package)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Node.js HTTP/HTTPS"})," (built-in modules)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fetch API"})," (Node.js 18+)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"via-environment-variables",children:"Via Environment Variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export TRAINLOOP_DATA_FOLDER="./data"\nexport TRAINLOOP_FLUSH_IMMEDIATELY=true\nexport TRAINLOOP_TAGS="production,v1.0"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"via-configuration-file",children:"Via Configuration File"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# trainloop.config.yaml\nsdk:\n  flush_immediately: false\n  buffer_size: 5\n  buffer_timeout: 10\n  tags: ["production"]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,r.jsx)(n.h3,{id:"manual-instrumentation",children:"Manual Instrumentation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Without automatic instrumentation\nconst { instrument } = require('trainloop-llm-logging');\n\n// Manually instrument specific modules\ninstrument();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"custom-data-folder",children:"Custom Data Folder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"process.env.TRAINLOOP_DATA_FOLDER = '/custom/path';\n// Then start with --require flag\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"process.on('uncaughtException', (error) => {\n    if (error.message.includes('TrainLoop')) {\n        console.warn('TrainLoop error:', error.message);\n        // Continue without instrumentation\n    }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"openai-chat-completion",children:"OpenAI Chat Completion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const { OpenAI } = require(\'openai\');\nconst { trainloopTag } = require(\'trainloop-llm-logging\');\n\nconst client = new OpenAI();\n\nasync function generateResponse() {\n    const response = await client.chat.completions.create({\n        model: "gpt-4o-mini",\n        messages: [\n            {"role": "system", "content": "You are a helpful assistant."},\n            {"role": "user", "content": "What is the capital of France?"}\n        ]\n    }, {\n        headers: { ...trainloopTag("qa") }\n    });\n    \n    return response.choices[0].message.content;\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"anthropic-claude",children:"Anthropic Claude"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const Anthropic = require(\'@anthropic-ai/sdk\');\nconst { trainloopTag } = require(\'trainloop-llm-logging\');\n\nconst client = new Anthropic();\n\nasync function generateResponse() {\n    const response = await client.messages.create({\n        model: "claude-3-haiku-20240307",\n        max_tokens: 1000,\n        messages: [\n            {"role": "user", "content": "Hello, Claude!"}\n        ]\n    }, {\n        headers: { ...trainloopTag("greeting") }\n    });\n    \n    return response.content[0].text;\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"expressjs-application",children:"Express.js Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const express = require('express');\nconst { OpenAI } = require('openai');\nconst { trainloopTag, shutdown } = require('trainloop-llm-logging');\n\nconst app = express();\nconst client = new OpenAI();\n\napp.post('/chat', async (req, res) => {\n    const response = await client.chat.completions.create({\n        model: \"gpt-4o-mini\",\n        messages: req.body.messages\n    }, {\n        headers: { ...trainloopTag(\"chat-api\") }\n    });\n    \n    res.json(response);\n});\n\n// Graceful shutdown\nprocess.on('SIGTERM', async () => {\n    await shutdown();\n    process.exit(0);\n});\n\napp.listen(3000);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"streaming-responses",children:"Streaming Responses"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const { OpenAI } = require(\'openai\');\nconst { trainloopTag } = require(\'trainloop-llm-logging\');\n\nconst client = new OpenAI();\n\nasync function streamChat() {\n    const stream = await client.chat.completions.create({\n        model: "gpt-4o-mini",\n        messages: [{"role": "user", "content": "Tell me a story"}],\n        stream: true\n    }, {\n        headers: { ...trainloopTag("streaming") }\n    });\n    \n    for await (const chunk of stream) {\n        process.stdout.write(chunk.choices[0]?.delta?.content || \'\');\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"typescript-support",children:"TypeScript Support"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { OpenAI } from \'openai\';\nimport { trainloopTag } from \'trainloop-llm-logging\';\n\nconst client = new OpenAI();\n\nasync function generateResponse(message: string): Promise<string> {\n    const response = await client.chat.completions.create({\n        model: "gpt-4o-mini",\n        messages: [{"role": "user", "content": message}]\n    }, {\n        headers: { ...trainloopTag("typescript-example") }\n    });\n    \n    return response.choices[0].message.content || \'\';\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Module not found"}),": Install with ",(0,r.jsx)(n.code,{children:"npm install trainloop-llm-logging"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"No data collected"}),": Ensure ",(0,r.jsx)(n.code,{children:"--require=trainloop-llm-logging"})," flag is used"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"High memory usage"}),": Set ",(0,r.jsx)(n.code,{children:"TRAINLOOP_FLUSH_IMMEDIATELY=true"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Missing events"}),": Verify environment variables are set correctly"]}),"\n",(0,r.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Enable debug logging\nDEBUG=trainloop* NODE_OPTIONS="--require=trainloop-llm-logging" node app.js\n'})}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/reference/sdk/",children:"SDK Overview"})," - Multi-language SDK documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/tutorials/getting-started",children:"Getting Started"})," - Complete setup guide"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/reference/sdk/python/api",children:"Python SDK"})," - Python API reference"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/reference/sdk/go/api",children:"Go SDK"})," - Go API reference"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);