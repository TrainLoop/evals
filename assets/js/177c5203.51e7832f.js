"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5787],{2944:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"reference/data-formats/results","title":"Results Data Format","description":"TrainLoop CLI generates evaluation results in JSON format after processing events with metrics.","source":"@site/docs/reference/data-formats/results.md","sourceDirName":"reference/data-formats","slug":"/reference/data-formats/results","permalink":"/reference/data-formats/results","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/docs/reference/data-formats/results.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Event Data Format","permalink":"/reference/data-formats/events"},"next":{"title":"Benchmark Data Schema","permalink":"/reference/benchmark-schema"}}');var r=n(4848),i=n(8453);const l={sidebar_position:2},a="Results Data Format",d={},c=[{value:"Overview",id:"overview",level:2},{value:"File Structure",id:"file-structure",level:2},{value:"Results Schema",id:"results-schema",level:2},{value:"Basic Results Structure",id:"basic-results-structure",level:3},{value:"Complete Results Example",id:"complete-results-example",level:3},{value:"Field Descriptions",id:"field-descriptions",level:2},{value:"Root Fields",id:"root-fields",level:3},{value:"Suite Fields",id:"suite-fields",level:3},{value:"Metric Fields",id:"metric-fields",level:3},{value:"Detail Fields",id:"detail-fields",level:3},{value:"Benchmark Results",id:"benchmark-results",level:2},{value:"Summary File",id:"summary-file",level:2},{value:"Reading Results Data",id:"reading-results-data",level:2},{value:"Command Line",id:"command-line",level:3},{value:"Python",id:"python",level:3},{value:"SQL (via DuckDB)",id:"sql-via-duckdb",level:3},{value:"Error Results",id:"error-results",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"See Also",id:"see-also",level:2}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"results-data-format",children:"Results Data Format"})}),"\n",(0,r.jsx)(s.p,{children:"TrainLoop CLI generates evaluation results in JSON format after processing events with metrics."}),"\n",(0,r.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(s.p,{children:["Results data is stored as JSON files in the ",(0,r.jsx)(s.code,{children:"data/results/"})," folder. Each file contains the outcomes of running evaluation metrics on event data."]}),"\n",(0,r.jsx)(s.h2,{id:"file-structure",children:"File Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"data/\n\u251c\u2500\u2500 results/\n\u2502   \u251c\u2500\u2500 evaluation_results_2024-01-15_14-30-25.json    # Main evaluation results\n\u2502   \u251c\u2500\u2500 evaluation_results_2024-01-15_15-00-00.json    # Another evaluation run\n\u2502   \u251c\u2500\u2500 evaluation_summary.json                        # Latest summary\n\u2502   \u2514\u2500\u2500 benchmark_results_2024-01-15_16-00-00.json     # Benchmark results\n"})}),"\n",(0,r.jsx)(s.h2,{id:"results-schema",children:"Results Schema"}),"\n",(0,r.jsx)(s.h3,{id:"basic-results-structure",children:"Basic Results Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T14:30:25.123Z",\n  "duration": 2.3,\n  "total_events": 150,\n  "suites": { ... },\n  "summary": { ... }\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"complete-results-example",children:"Complete Results Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T14:30:25.123Z",\n  "duration": 2.3,\n  "total_events": 150,\n  "suites": {\n    "greeting_evaluation": {\n      "events_processed": 45,\n      "metrics": {\n        "has_greeting_word": {\n          "passed": 42,\n          "total": 45,\n          "score": 0.933,\n          "details": [\n            {\n              "event_id": "evt_123",\n              "passed": true,\n              "input": "Hello, how are you?",\n              "output": "Hello! I\'m doing well, thanks for asking.",\n              "verdict": "Contains greeting word: hello"\n            }\n          ]\n        },\n        "is_personalized": {\n          "passed": 38,\n          "total": 45,\n          "score": 0.844,\n          "details": [...]\n        }\n      },\n      "overall_score": 0.889,\n      "tags": ["greeting-generation"],\n      "duration": 1.2\n    },\n    "accuracy_check": {\n      "events_processed": 105,\n      "metrics": {\n        "is_accurate": {\n          "passed": 95,\n          "total": 105,\n          "score": 0.905,\n          "details": [...]\n        }\n      },\n      "overall_score": 0.905,\n      "tags": [""],\n      "duration": 1.1\n    }\n  },\n  "summary": {\n    "total_suites": 2,\n    "overall_score": 0.897,\n    "total_metrics": 3,\n    "total_passed": 175,\n    "total_evaluated": 195,\n    "pass_rate": 0.897\n  },\n  "configuration": {\n    "data_folder": "./trainloop/data",\n    "judge_models": ["openai/gpt-4o-mini"],\n    "parallel_evaluations": 10\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"field-descriptions",children:"Field Descriptions"}),"\n",(0,r.jsx)(s.h3,{id:"root-fields",children:"Root Fields"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"timestamp"})}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"ISO 8601 timestamp when evaluation started"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"duration"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Total evaluation duration in seconds"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"total_events"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Total events processed"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"suites"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Results for each evaluation suite"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"summary"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Aggregated results summary"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"configuration"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Configuration used for evaluation"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"suite-fields",children:"Suite Fields"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"events_processed"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Events processed by this suite"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"metrics"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Results for each metric"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"overall_score"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Average score across all metrics"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tags"})}),(0,r.jsx)(s.td,{children:"array"}),(0,r.jsx)(s.td,{children:"Tags used to filter events"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"duration"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Suite execution duration"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"metric-fields",children:"Metric Fields"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"passed"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Number of events that passed"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"total"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Total events evaluated"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"score"})}),(0,r.jsx)(s.td,{children:"number"}),(0,r.jsx)(s.td,{children:"Pass rate (passed/total)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"details"})}),(0,r.jsx)(s.td,{children:"array"}),(0,r.jsx)(s.td,{children:"Individual event results"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"detail-fields",children:"Detail Fields"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Field"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"event_id"})}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Unique event identifier"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"passed"})}),(0,r.jsx)(s.td,{children:"boolean"}),(0,r.jsx)(s.td,{children:"Whether metric passed"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"input"})}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Input text (truncated)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"output"})}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Output text (truncated)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"verdict"})}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Explanation of result"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"metadata"})}),(0,r.jsx)(s.td,{children:"object"}),(0,r.jsx)(s.td,{children:"Additional metadata"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"benchmark-results",children:"Benchmark Results"}),"\n",(0,r.jsx)(s.p,{children:"Benchmark results have additional fields for model comparison:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T16:00:00.123Z",\n  "type": "benchmark",\n  "providers": ["openai/gpt-4o", "openai/gpt-4o-mini", "anthropic/claude-3-sonnet"],\n  "total_samples": 100,\n  "results": {\n    "openai/gpt-4o": {\n      "metrics": {\n        "helpful_check": {\n          "passed": 85,\n          "total": 100,\n          "score": 0.85\n        }\n      },\n      "overall_score": 0.85,\n      "cost_analysis": {\n        "total_cost": 4.50,\n        "cost_per_token": 0.015,\n        "cost_per_score": 0.053\n      },\n      "performance": {\n        "avg_response_time": 1.2,\n        "total_tokens": 15000\n      }\n    },\n    "openai/gpt-4o-mini": {\n      "metrics": {\n        "helpful_check": {\n          "passed": 82,\n          "total": 100,\n          "score": 0.82\n        }\n      },\n      "overall_score": 0.82,\n      "cost_analysis": {\n        "total_cost": 0.30,\n        "cost_per_token": 0.001,\n        "cost_per_score": 0.004\n      },\n      "performance": {\n        "avg_response_time": 0.8,\n        "total_tokens": 15000\n      }\n    }\n  },\n  "comparison": {\n    "best_overall": "openai/gpt-4o",\n    "best_value": "openai/gpt-4o-mini",\n    "cost_savings": 0.93\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"summary-file",children:"Summary File"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"evaluation_summary.json"})," file contains a rolling summary:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "latest_evaluation": "2024-01-15T14:30:25.123Z",\n  "total_suites": 2,\n  "overall_score": 0.897,\n  "trending": {\n    "score_change": 0.05,\n    "trend": "improving",\n    "last_7_days": [\n      {"date": "2024-01-09", "score": 0.82},\n      {"date": "2024-01-10", "score": 0.84},\n      {"date": "2024-01-11", "score": 0.86},\n      {"date": "2024-01-12", "score": 0.88},\n      {"date": "2024-01-13", "score": 0.89},\n      {"date": "2024-01-14", "score": 0.90},\n      {"date": "2024-01-15", "score": 0.897}\n    ]\n  },\n  "metrics_summary": {\n    "total_metrics": 3,\n    "critical_metrics": ["is_accurate", "is_safe"],\n    "performance_metrics": ["has_greeting_word", "is_personalized"]\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"reading-results-data",children:"Reading Results Data"}),"\n",(0,r.jsx)(s.h3,{id:"command-line",children:"Command Line"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# View latest results\ncat data/results/evaluation_summary.json\n\n# View specific evaluation\ncat data/results/evaluation_results_2024-01-15_14-30-25.json\n\n# Extract scores\njq '.summary.overall_score' data/results/evaluation_summary.json\n"})}),"\n",(0,r.jsx)(s.h3,{id:"python",children:"Python"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import json\nfrom pathlib import Path\n\ndef read_results(data_folder):\n    results_dir = Path(data_folder) / "results"\n    \n    # Read summary\n    summary_file = results_dir / "evaluation_summary.json"\n    if summary_file.exists():\n        with open(summary_file) as f:\n            summary = json.load(f)\n        return summary\n    \n    # Find latest results\n    result_files = list(results_dir.glob("evaluation_results_*.json"))\n    if not result_files:\n        return None\n        \n    latest_file = max(result_files, key=lambda p: p.stat().st_mtime)\n    with open(latest_file) as f:\n        return json.load(f)\n\n# Usage\nresults = read_results("trainloop/data")\nif results:\n    print(f"Overall score: {results[\'summary\'][\'overall_score\']:.1%}")\n'})}),"\n",(0,r.jsx)(s.h3,{id:"sql-via-duckdb",children:"SQL (via DuckDB)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"-- Query results in Studio UI\nSELECT \n  timestamp,\n  summary.overall_score,\n  summary.total_suites,\n  summary.pass_rate\nFROM 'data/results/evaluation_*.json'\nORDER BY timestamp DESC\nLIMIT 10;\n\n-- Suite performance over time\nSELECT \n  timestamp,\n  suite_name,\n  suite_data.overall_score\nFROM 'data/results/evaluation_*.json',\n     UNNEST(suites) AS suite_data\nORDER BY timestamp DESC;\n"})}),"\n",(0,r.jsx)(s.h2,{id:"error-results",children:"Error Results"}),"\n",(0,r.jsx)(s.p,{children:"When evaluations fail, error information is captured:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "timestamp": "2024-01-15T14:30:25.123Z",\n  "duration": 0.5,\n  "status": "error",\n  "error": {\n    "type": "MetricError",\n    "message": "Metric \'is_helpful\' failed to execute",\n    "details": {\n      "metric": "is_helpful",\n      "suite": "quality_check",\n      "event_id": "evt_456",\n      "traceback": "..."\n    }\n  },\n  "partial_results": {\n    "suites": {\n      "quality_check": {\n        "events_processed": 23,\n        "status": "failed",\n        "error": "Metric execution failed"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Regular Cleanup"}),": Remove old result files to save space"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Monitoring"}),": Track overall_score trends over time"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Alerting"}),": Set up alerts for score drops"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Archiving"}),": Archive important benchmark results"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Analysis"}),": Use SQL queries for deeper analysis"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/reference/data-formats/events",children:"Event Data Format"})," - Input data structure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/reference/cli/eval",children:"CLI Reference"})," - How to generate results"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/reference/cli/studio",children:"Studio UI"})," - How to visualize results"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var t=n(6540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);