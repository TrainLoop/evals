"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8218],{2220:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cli-eval","title":"trainloop eval","description":"Tutorial","source":"@site/cli/eval.mdx","sourceDirName":".","slug":"/cli-eval","permalink":"/cli/cli-eval","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/cli/cli/eval.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"cli-eval","title":"trainloop eval","sidebar_position":3},"sidebar":"cliSidebar","previous":{"title":"trainloop init","permalink":"/cli/cli-init"},"next":{"title":"trainloop studio","permalink":"/cli/cli-studio"}}');var l=i(4848),o=i(8453);const r={id:"cli-eval",title:"trainloop eval",sidebar_position:3},s=void 0,a={},c=[{value:"Tutorial",id:"tutorial",level:2},{value:"How\u2011to",id:"howto",level:2},{value:"Reference",id:"reference",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,l.jsxs)(n.p,{children:["After collecting events with the SDK you run ",(0,l.jsx)(n.code,{children:"trainloop eval"})," to produce results."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"trainloop eval\n"})}),"\n",(0,l.jsx)(n.h2,{id:"howto",children:"How\u2011to"}),"\n",(0,l.jsx)(n.p,{children:"Run a single suite by name:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"trainloop eval --suite my_suite\n"})}),"\n",(0,l.jsx)(n.p,{children:"Use a custom config file:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"trainloop eval --config path/to/custom.yaml\n"})}),"\n",(0,l.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,l.jsxs)(n.p,{children:["Evaluates events from the configured data folder and appends results under ",(0,l.jsx)(n.code,{children:"trainloop/data/results/"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Options:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--suite <name>"})," \u2013 run only the specified suite."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--config <path>"})," \u2013 path to ",(0,l.jsx)(n.code,{children:"trainloop.config.yaml"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Configuration files are discovered using a cascade. The command checks the ",(0,l.jsx)(n.code,{children:"--config"})," argument, then the ",(0,l.jsx)(n.code,{children:"TRAINLOOP_CONFIG_PATH"})," environment variable, and finally looks for ",(0,l.jsx)(n.code,{children:"trainloop.config.yaml"})," in parent directories."]}),"\n",(0,l.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"trainloop eval"})," loads metrics and suites from ",(0,l.jsx)(n.code,{children:"trainloop/eval/"}),". It processes new events in ",(0,l.jsx)(n.code,{children:"trainloop/data/events/"}),". Results are stored alongside the events. When using the LLM judge, traces are consolidated under ",(0,l.jsx)(n.code,{children:"trainloop/data/judge_traces/"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["See ",(0,l.jsx)(n.a,{href:"./cli-config",children:"Configuration"})," and ",(0,l.jsx)(n.a,{href:"./cli-env-vars",children:"Environment Variables"})," for more details."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var t=i(6540);const l={},o=t.createContext(l);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);