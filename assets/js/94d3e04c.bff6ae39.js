"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9775],{6616:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"cli-add","title":"trainloop add","description":"Tutorial","source":"@site/cli/add.mdx","sourceDirName":".","slug":"/cli-add","permalink":"/cli/cli-add","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/cli/cli/add.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"cli-add","title":"trainloop add","sidebar_position":5},"sidebar":"cliSidebar","previous":{"title":"trainloop studio","permalink":"/cli/cli-studio"},"next":{"title":"trainloop benchmark","permalink":"/cli/cli-benchmark"}}');var t=n(4848),s=n(8453);const l={id:"cli-add",title:"trainloop add",sidebar_position:5},o=void 0,a={},c=[{value:"Tutorial",id:"tutorial",level:2},{value:"How\u2011to",id:"howto",level:2},{value:"Reference",id:"reference",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const i={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,t.jsx)(i.p,{children:"List available registry components:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"trainloop add --list\n"})}),"\n",(0,t.jsx)(i.p,{children:"Install a metric:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"trainloop add metric always_pass\n"})}),"\n",(0,t.jsx)(i.h2,{id:"howto",children:"How\u2011to"}),"\n",(0,t.jsx)(i.p,{children:"Use a local registry while developing new metrics:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"trainloop add --registry ../registry metric custom_metric\n"})}),"\n",(0,t.jsx)(i.p,{children:"Force overwrite existing files:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"trainloop add metric my_metric --force\n"})}),"\n",(0,t.jsx)(i.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)(i.p,{children:"Adds metrics or suites from the TrainLoop registry into your project."}),"\n",(0,t.jsx)(i.p,{children:"Options:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"--list"})," \u2013 list available components."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"--force"})," \u2013 overwrite existing files."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"--registry <path>"})," \u2013 use a local registry directory."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"--version <tag>"})," \u2013 pull components from a specific CLI version."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsxs)(i.p,{children:["Registry components include reusable metrics and suites. After adding them you can modify the source under ",(0,t.jsx)(i.code,{children:"trainloop/eval/"}),". Use ",(0,t.jsx)(i.a,{href:"../docs/getting-started/quick-start.md#trainloop_tag",children:(0,t.jsx)(i.code,{children:"trainloop_tag"})})," in your SDK calls to label requests for evaluation."]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var r=n(6540);const t={},s=r.createContext(t);function l(e){const i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);