"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{6306:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"reference/sdk/python/api","title":"Python SDK API","description":"Complete API reference for the TrainLoop Python SDK.","source":"@site/docs/reference/sdk/python/api.md","sourceDirName":"reference/sdk/python","slug":"/reference/sdk/python/api","permalink":"/reference/sdk/python/api","draft":false,"unlisted":false,"editUrl":"https://github.com/trainloop/evals/tree/main/docs/docs/reference/sdk/python/api.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Python","permalink":"/reference/sdk/python"},"next":{"title":"TypeScript","permalink":"/reference/sdk/typescript"}}');var t=i(4848),o=i(8453);const r={sidebar_position:1},a="Python SDK API",s={},c=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"collect(config_path=None, **kwargs)",id:"collectconfig_pathnone-kwargs",level:3},{value:"trainloop_tag(tag, **metadata)",id:"trainloop_tagtag-metadata",level:3},{value:"flush()",id:"flush",level:3},{value:"Supported Libraries",id:"supported-libraries",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Via Configuration File",id:"via-configuration-file",level:3},{value:"Via Environment Variables",id:"via-environment-variables",level:3},{value:"Via Code",id:"via-code",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Data Folder",id:"custom-data-folder",level:3},{value:"Conditional Instrumentation",id:"conditional-instrumentation",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Examples",id:"examples",level:2},{value:"OpenAI Chat Completion",id:"openai-chat-completion",level:3},{value:"Anthropic Claude",id:"anthropic-claude",level:3},{value:"Batch Processing",id:"batch-processing",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"python-sdk-api",children:"Python SDK API"})}),"\n",(0,t.jsx)(n.p,{children:"Complete API reference for the TrainLoop Python SDK."}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install trainloop-llm-logging\n"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from trainloop_llm_logging import collect, trainloop_tag\n\n# Initialize TrainLoop (call once at startup)\ncollect("trainloop/trainloop.config.yaml")\n\n# Use with OpenAI\nimport openai\nclient = openai.OpenAI()\n\nresponse = client.chat.completions.create(\n    model="gpt-4o-mini",\n    messages=[{"role": "user", "content": "Hello"}],\n    extra_headers=trainloop_tag("greeting")  # Optional tagging\n)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"collectconfig_pathnone-kwargs",children:"collect(config_path=None, **kwargs)"}),"\n",(0,t.jsx)(n.p,{children:"Initialize TrainLoop data collection."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"config_path"})," (str, optional): Path to configuration file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"flush_immediately"})," (bool, optional): Disable buffering"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tags"})," (list, optional): Default tags for all events"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Basic initialization\ncollect()\n\n# With configuration file\ncollect("trainloop/trainloop.config.yaml")\n\n# With options\ncollect(flush_immediately=True, tags=["production"])\n'})}),"\n",(0,t.jsx)(n.h3,{id:"trainloop_tagtag-metadata",children:"trainloop_tag(tag, **metadata)"}),"\n",(0,t.jsx)(n.p,{children:"Generate headers for tagging LLM calls."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tag"})," (str): Tag name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"**metadata"}),": Additional metadata"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": Dict of headers for OpenAI ",(0,t.jsx)(n.code,{children:"extra_headers"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Basic tagging\nheaders = trainloop_tag("greeting")\n\n# With metadata\nheaders = trainloop_tag("customer-support", priority="high", version="1.0")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"flush",children:"flush()"}),"\n",(0,t.jsx)(n.p,{children:"Manually flush buffered events to disk."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from trainloop_llm_logging import flush\n\n# Flush all buffered events\nflush()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"supported-libraries",children:"Supported Libraries"}),"\n",(0,t.jsx)(n.p,{children:"The Python SDK automatically instruments these libraries:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenAI"})," (",(0,t.jsx)(n.code,{children:"openai"})," package)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Anthropic"})," (",(0,t.jsx)(n.code,{children:"anthropic"})," package)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Requests"})," (",(0,t.jsx)(n.code,{children:"requests"})," package)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HTTPX"})," (",(0,t.jsx)(n.code,{children:"httpx"})," package)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"via-configuration-file",children:"Via Configuration File"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# trainloop.config.yaml\nsdk:\n  flush_immediately: false\n  buffer_size: 5\n  buffer_timeout: 10\n  tags: ["production"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"via-environment-variables",children:"Via Environment Variables"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export TRAINLOOP_DATA_FOLDER="./data"\nexport TRAINLOOP_FLUSH_IMMEDIATELY=true\nexport TRAINLOOP_TAGS="production,v1.0"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"via-code",children:"Via Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'collect(\n    flush_immediately=True,\n    buffer_size=10,\n    buffer_timeout=30,\n    tags=["production"]\n)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsx)(n.h3,{id:"custom-data-folder",children:"Custom Data Folder"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import os\nos.environ["TRAINLOOP_DATA_FOLDER"] = "/custom/path"\ncollect()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"conditional-instrumentation",children:"Conditional Instrumentation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import os\n\n# Only instrument in production\nif os.getenv("ENVIRONMENT") == "production":\n    collect()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'try:\n    collect()\nexcept Exception as e:\n    print(f"TrainLoop initialization failed: {e}")\n    # Continue without instrumentation\n'})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"openai-chat-completion",children:"OpenAI Chat Completion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import openai\nfrom trainloop_llm_logging import collect, trainloop_tag\n\ncollect()\nclient = openai.OpenAI()\n\nresponse = client.chat.completions.create(\n    model="gpt-4o-mini",\n    messages=[\n        {"role": "system", "content": "You are a helpful assistant."},\n        {"role": "user", "content": "What is the capital of France?"}\n    ],\n    extra_headers=trainloop_tag("qa")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"anthropic-claude",children:"Anthropic Claude"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import anthropic\nfrom trainloop_llm_logging import collect, trainloop_tag\n\ncollect()\nclient = anthropic.Anthropic()\n\nresponse = client.messages.create(\n    model="claude-3-haiku-20240307",\n    max_tokens=1000,\n    messages=[\n        {"role": "user", "content": "Hello, Claude!"}\n    ],\n    extra_headers=trainloop_tag("greeting")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"batch-processing",children:"Batch Processing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import openai\nfrom trainloop_llm_logging import collect, trainloop_tag, flush\n\ncollect()\nclient = openai.OpenAI()\n\n# Process multiple requests\nfor i in range(100):\n    response = client.chat.completions.create(\n        model="gpt-4o-mini",\n        messages=[{"role": "user", "content": f"Request {i}"}],\n        extra_headers=trainloop_tag("batch-processing")\n    )\n\n# Ensure all events are written\nflush()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ImportError"}),": Install the package with ",(0,t.jsx)(n.code,{children:"pip install trainloop-llm-logging"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"No data collected"}),": Check that ",(0,t.jsx)(n.code,{children:"TRAINLOOP_DATA_FOLDER"})," is set and writable"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"High memory usage"}),": Enable ",(0,t.jsx)(n.code,{children:"flush_immediately=True"})," for high-volume applications"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Missing events"}),": Ensure ",(0,t.jsx)(n.code,{children:"collect()"})," is called before making LLM calls"]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/reference/sdk/",children:"SDK Overview"})," - Multi-language SDK documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/tutorials/getting-started",children:"Getting Started"})," - Complete setup guide"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/reference/sdk/typescript/api",children:"TypeScript SDK"})," - TypeScript API reference"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/reference/sdk/go/api",children:"Go SDK"})," - Go API reference"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var l=i(6540);const t={},o=l.createContext(t);function r(e){const n=l.useContext(o);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);